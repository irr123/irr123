<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on The Archive</title><link>https://bogomolov.work/blog/posts/</link><description>Recent content in Posts on The Archive</description><generator>Hugo -- 0.149.1</generator><language>en</language><lastBuildDate>Fri, 05 Sep 2025 08:13:44 +0000</lastBuildDate><atom:link href="https://bogomolov.work/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>HTML Sanitization: Avoiding The Double-Encoding Issue</title><link>https://bogomolov.work/blog/posts/html-sanitization/</link><pubDate>Fri, 05 Sep 2025 08:13:44 +0000</pubDate><guid>https://bogomolov.work/blog/posts/html-sanitization/</guid><description>Once upon a time, I went through another security audit on a project that wasn‚Äôt particularly old but had passed through the hands of several teams. After the first round of penetration testing, the auditing team found a lack of data sanitization on the backend side.</description></item><item><title>How-To: A Private WireGuard VPN with Selective Tor Routing</title><link>https://bogomolov.work/blog/posts/howto-wireguard/</link><pubDate>Sat, 12 Jul 2025 11:04:35 +0000</pubDate><guid>https://bogomolov.work/blog/posts/howto-wireguard/</guid><description>When planning a VPN, OpenVPN is often the default choice. However, in this post, I‚Äôll document the process of building a private VPN using WireGuard to unite different devices (servers, a notebook, and a phone) into a single, secure network. Additionally, I will selectively route all internet traffic from my notebook and phone through the Tor network, while allowing other servers on the VPN to communicate normally without being routed through Tor.</description></item><item><title>Shadowsocks to Tor: Why It Failed as a VPN Alternative</title><link>https://bogomolov.work/blog/posts/shadowsocks-to-tor/</link><pubDate>Wed, 28 May 2025 16:25:43 +0000</pubDate><guid>https://bogomolov.work/blog/posts/shadowsocks-to-tor/</guid><description>Well, the time has come, and I‚Äôve decided to update, clean up, and generally re-think my ‚Äúhome‚Äù infrastructure. This part is only about a (mostly failed) networking setup.
What do I have and what do I want? I have a few virtual private servers (VPS) from different hosting providers, a Raspberry Pi, a PlayStation, some PCs at home, and mobile phones. The goal is to set up simple monitoring of the VPSs, build a dashboard on the Raspberry Pi, and have the ability to deploy services without constantly worrying about security. I also want to occasionally access the internet from third-party regions and IP addresses, with the ability to add more infrastructure without pain. Something similar to the scheme below:</description></item><item><title>Free online qr code generator</title><link>https://bogomolov.work/blog/posts/free-online-qr-code-generator/</link><pubDate>Sat, 24 May 2025 08:47:42 +0000</pubDate><guid>https://bogomolov.work/blog/posts/free-online-qr-code-generator/</guid><description>What a shame ‚Äì nowadays, one quick request to GPT spits out a proper HTML page with a full-fledged QR code generator‚Ä¶1 and yet I wasted way more time Googling for a free generator that could give me png and svg. Every single one wants registration, logging in through some OAuth nonsense, or worst of all, a payment just for an svg ü§¶üèº.</description></item><item><title>GPT-4o behaves like a marketer</title><link>https://bogomolov.work/blog/posts/gpt-4o-behaves-like-marketer/</link><pubDate>Sun, 27 Apr 2025 15:40:27 +0000</pubDate><guid>https://bogomolov.work/blog/posts/gpt-4o-behaves-like-marketer/</guid><description>OpenAI, too, likely breaks trust with this approach. This X post gave me an idea to check. And now it‚Äôs real: GPT-4o behaves like a marketer.
My dialogue with GPT-4o https://chatgpt.com/share/680e5956-6918-8005-bd3b-60fecf9aeb17</description></item><item><title>Hugo static site generator + Prettier code formatter = ‚ù§Ô∏è</title><link>https://bogomolov.work/blog/posts/hugo-code-formatting/</link><pubDate>Mon, 14 Apr 2025 19:42:48 +0000</pubDate><guid>https://bogomolov.work/blog/posts/hugo-code-formatting/</guid><description>I like my code nicely formatted, and since I‚Äôm using Hugo here üëá, I figured it was a good idea to finally set it up properly. But I hit a little problem ‚Äì Hugo templates aren‚Äôt just Markdown; they‚Äôre a mix of YAML/JSON, HTML/CSS/JS, Go‚Äôs template syntax. Before I found the real solution, I had actually prepared myself to fork shurcooL/markdownfmt and add support for Hugo‚Äôs template syntax myself.</description></item><item><title>Gemini 2.5 Pro</title><link>https://bogomolov.work/blog/posts/gemini25/</link><pubDate>Tue, 25 Mar 2025 19:18:59 +0000</pubDate><guid>https://bogomolov.work/blog/posts/gemini25/</guid><description> 2.5 Pro can use its reasoning capabilities to create a video game by producing the executable code from a single line prompt
https://blog.google/technology/google-deepmind/gemini-model-thinking-updates-march-2025/#advanced-coding
# Prompt And it‚Äôs really works, in one shot:</description></item><item><title>PlayStation statistics</title><link>https://bogomolov.work/blog/posts/psn-statistics/</link><pubDate>Mon, 24 Mar 2025 19:09:56 +0000</pubDate><guid>https://bogomolov.work/blog/posts/psn-statistics/</guid><description>Here‚Äôs a tool to peek at your PlayStation life-hours played, games beaten, the works. It‚Äôs open-source, so feel free to mess with it and add your own spin.
https://github.com/irr123/psn-games-stats/tree/argparse
# My stats A third of a year lost (or gained?) to gaming! This doesn‚Äôt even include my Steam hours, I‚Äôm almost afraid to add those up üôà</description></item><item><title>Prompt engineering notes</title><link>https://bogomolov.work/blog/posts/prompt-engineering-notes/</link><pubDate>Thu, 20 Mar 2025 08:00:14 +0000</pubDate><guid>https://bogomolov.work/blog/posts/prompt-engineering-notes/</guid><description>If you weren‚Äôt aware, there was a leak of Cursor and some other prompts. I‚Äôm not here to evaluate the quality of prompts, but let‚Äôs consider it as a state of the art from experienced guys.</description></item><item><title>Search Engine Indexing: A Case Study with Google, Bing, and Yandex</title><link>https://bogomolov.work/blog/posts/search-engine-indexing/</link><pubDate>Sun, 16 Mar 2025 10:25:54 +0000</pubDate><guid>https://bogomolov.work/blog/posts/search-engine-indexing/</guid><description>In this article I want to share my experience of using search engine consoles, continuing an idea from a recent Telegram post. Maybe this could reduce frustration for someone, reassuring them that they‚Äôre not alone - or even save them some time.</description></item><item><title>Will AI Replace Developers?</title><link>https://bogomolov.work/blog/posts/will-ai-replace-developers/</link><pubDate>Wed, 12 Mar 2025 18:22:35 +0000</pubDate><guid>https://bogomolov.work/blog/posts/will-ai-replace-developers/</guid><description>A common narrative from OpenAI and similar companies (previous hype was from no-code-guys) suggests that the era of human developers is ending due to cost considerations, and that AI will replace programmers soon.</description></item><item><title>Google Drive Backup Part 2</title><link>https://bogomolov.work/blog/posts/google-drive-backup-part2/</link><pubDate>Wed, 05 Mar 2025 08:46:19 +0000</pubDate><guid>https://bogomolov.work/blog/posts/google-drive-backup-part2/</guid><description>This is a continuation of the first part, where we built a basic backup solution using local storage. Now, let‚Äôs elevate our approach by integrating another cloud provider and adding robust encryption.
# Dropbox: Setting Up an Additional Cloud Provider To obtain an access token, you‚Äôll need to configure rclone locally (because of web browser). Here‚Äôs how I did it using Docker:</description></item><item><title>(Almost) Free Google Drive Backup</title><link>https://bogomolov.work/blog/posts/google-drive-backup/</link><pubDate>Thu, 27 Feb 2025 20:12:31 +0000</pubDate><guid>https://bogomolov.work/blog/posts/google-drive-backup/</guid><description>Have you truly considered the catastrophic risks of losing all your Google Drive data? Can your business afford such a loss?
Let me guide you in mitigating those risks. I asked myself the same question and searched for a reliable, out-of-the-box solution. Disappointed with Google‚Äôs suggestions, I decided to build my own. Think of it as playing with Lego-assembling the necessary components.</description></item><item><title>DI Container vs. Service Template (generator)</title><link>https://bogomolov.work/blog/posts/golang-di-container-vs-service-template/</link><pubDate>Fri, 21 Feb 2025 06:31:02 +0000</pubDate><guid>https://bogomolov.work/blog/posts/golang-di-container-vs-service-template/</guid><description>Let‚Äôs talk about building and evolving Golang services in the enterprise. We‚Äôll explore two approaches:
A Service Template (generator) is a common approach for unifying and quickly bootstrapping new microservices. Its popularity is evident in the community, as demonstrated by examples such as: https://github.com/evrone/go-clean-template https://www.reddit.com/r/golang/comments/1h124ee/rate_my_go_project_template/ https://dev.to/protium/github-template-for-golang-services-3o27 https://www.youtube.com/watch?v=1ZbQS6pOlSQ Dependency injection (DI)1 is an approach where objects are constructed by passing pre-initialized components to them, rather than having the objects initialize those components themselves.2 DI container automates the dependency injection process. While not the most common approach for bootstrapping new services, it offers several advantages, which I will outline. # The problem The challenge is a timeless one: accelerating the delivery of value to production. From a technical perspective, this translates to several key requirements:</description></item><item><title>Python3 Dockerfile with uv</title><link>https://bogomolov.work/blog/posts/docker-uv/</link><pubDate>Tue, 18 Feb 2025 12:39:42 +0000</pubDate><guid>https://bogomolov.work/blog/posts/docker-uv/</guid><description>I‚Äôve been noticed that my simple python3 docker image with uv has unexpected amount of downloads, so, I descided to steal some traffic from original https://docs.astral.sh/uv/guides/integration/docker/ to it page.
# What is it uv? Long story short - it‚Äôs fast-rust python‚Äôs pip alternative. And python3 -m venv ./venv too and maybe more at time when you‚Äôre reading it.</description></item></channel></rss>
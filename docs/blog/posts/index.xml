<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on The Archive</title><link>https://bogomolov.work/blog/posts/</link><description>Recent content in Posts on The Archive</description><generator>Hugo -- 0.146.4</generator><language>en</language><lastBuildDate>Sat, 24 May 2025 08:47:42 +0000</lastBuildDate><atom:link href="https://bogomolov.work/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Free online qr code generator</title><link>https://bogomolov.work/blog/posts/free-online-qr-code-generator/</link><pubDate>Sat, 24 May 2025 08:47:42 +0000</pubDate><guid>https://bogomolov.work/blog/posts/free-online-qr-code-generator/</guid><description>&lt;p>What a shame &amp;ndash; nowadays, one quick request to GPT spits out a proper HTML page
with a full-fledged QR code generator&amp;hellip;&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> and yet I wasted &lt;em>way&lt;/em> more time
Googling for a free generator that could give me &lt;code>png&lt;/code> and &lt;code>svg&lt;/code>. Every single
one wants registration, logging in through some OAuth nonsense, or worst of all,
a payment just for an &lt;code>svg&lt;/code> ü§¶üèº.&lt;/p></description></item><item><title>GPT-4o behaves like a marketer</title><link>https://bogomolov.work/blog/posts/gpt-4o-behaves-like-marketer/</link><pubDate>Sun, 27 Apr 2025 15:40:27 +0000</pubDate><guid>https://bogomolov.work/blog/posts/gpt-4o-behaves-like-marketer/</guid><description>&lt;p>OpenAI, too, likely breaks trust with this approach.
&lt;a href="https://x.com/MarioNawfal/status/1916338182854967560" target="_blank" rel="noopener noreferrer external">This &lt;strong>X&lt;/strong> post&lt;/a> gave me
an idea to check. And now it&amp;rsquo;s real: GPT-4o behaves like a marketer.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;source srcset="https://bogomolov.work/blog/posts/gpt-4o-behaves-like-marketer/seller_hu_3c9e084aef70be3.webp" type="image/webp">
&lt;source srcset="https://bogomolov.work/blog/posts/gpt-4o-behaves-like-marketer/seller_hu_1a28ee30c9c20709.jpg" type="image/jpeg">
&lt;img src="https://bogomolov.work/blog/posts/gpt-4o-behaves-like-marketer/seller_hu_1a28ee30c9c20709.jpg"
alt="GPT-4o depicted as a corrupted Warhammer 40k Dreadnought"
loading="lazy"
decoding="async">
&lt;/picture>
&lt;/figure>&lt;/p></description></item><item><title>Hugo static site generator + Prettier code formatter = ‚ù§Ô∏è</title><link>https://bogomolov.work/blog/posts/hugo-code-formatting/</link><pubDate>Mon, 14 Apr 2025 19:42:48 +0000</pubDate><guid>https://bogomolov.work/blog/posts/hugo-code-formatting/</guid><description>&lt;p>I like my code nicely formatted, and since I&amp;rsquo;m using Hugo here üëá, I figured it
was a good idea to finally set it up properly. But I hit a little problem ‚Äì Hugo
templates aren&amp;rsquo;t &lt;em>just&lt;/em> Markdown; they&amp;rsquo;re a mix of YAML/JSON, HTML/CSS/JS, Go&amp;rsquo;s
template syntax. Before I found the real solution, I had actually prepared
myself to fork shurcooL/markdownfmt and add support for Hugo&amp;rsquo;s template syntax
myself.&lt;/p></description></item><item><title>Gemini 2.5 Pro</title><link>https://bogomolov.work/blog/posts/gemini25/</link><pubDate>Tue, 25 Mar 2025 19:18:59 +0000</pubDate><guid>https://bogomolov.work/blog/posts/gemini25/</guid><description>&lt;blockquote>
&lt;p>2.5 Pro can use its reasoning capabilities to create a video game by producing
the executable code from a single line prompt&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://blog.google/technology/google-deepmind/gemini-model-thinking-updates-march-2025/#advanced-coding" target="_blank" rel="noopener noreferrer external">https://blog.google/technology/google-deepmind/gemini-model-thinking-updates-march-2025/#advanced-coding&lt;/a>&lt;/p>
&lt;h2 id="prompt">
&lt;a href="#prompt">#&lt;/a> Prompt&lt;/h2>
&lt;p>And it&amp;rsquo;s really works, in one shot:&lt;/p></description></item><item><title>PlayStation statistics</title><link>https://bogomolov.work/blog/posts/psn-statistics/</link><pubDate>Mon, 24 Mar 2025 19:09:56 +0000</pubDate><guid>https://bogomolov.work/blog/posts/psn-statistics/</guid><description>&lt;p>Here&amp;rsquo;s a tool to peek at your PlayStation life-hours played, games beaten, the
works. It&amp;rsquo;s open-source, so feel free to mess with it and add your own spin.&lt;/p>
&lt;p>&lt;a href="https://github.com/irr123/psn-games-stats/tree/argparse" target="_blank" rel="noopener noreferrer external">https://github.com/irr123/psn-games-stats/tree/argparse&lt;/a>&lt;/p>
&lt;h2 id="my-stats">
&lt;a href="#my-stats">#&lt;/a> My stats&lt;/h2>
&lt;p>A third of a year lost (or gained?) to gaming! This doesn&amp;rsquo;t even include my
Steam hours, I&amp;rsquo;m almost afraid to add those up üôà&lt;/p></description></item><item><title>Prompt engineering notes</title><link>https://bogomolov.work/blog/posts/prompt-engineering-notes/</link><pubDate>Thu, 20 Mar 2025 08:00:14 +0000</pubDate><guid>https://bogomolov.work/blog/posts/prompt-engineering-notes/</guid><description>&lt;p>If you weren&amp;rsquo;t aware, there was a leak of &lt;a href="https://www.cursor.com/" target="_blank" rel="noopener noreferrer external">Cursor&lt;/a> and
some other
&lt;a href="https://github.com/x1xhlol/system-prompts-and-models-of-ai-tools" target="_blank" rel="noopener noreferrer external">prompts&lt;/a>. I&amp;rsquo;m
not here to evaluate the quality of prompts, but let&amp;rsquo;s consider it as a state of
the art from experienced guys.&lt;/p></description></item><item><title>Search Engine Indexing: A Case Study with Google, Bing, and Yandex</title><link>https://bogomolov.work/blog/posts/search-engine-indexing/</link><pubDate>Sun, 16 Mar 2025 10:25:54 +0000</pubDate><guid>https://bogomolov.work/blog/posts/search-engine-indexing/</guid><description>&lt;p>In this article I want to share my experience of using search engine consoles,
continuing an idea from a recent
&lt;a href="https://t.me/the_digital_lab/13" target="_blank" rel="noopener noreferrer external">Telegram post&lt;/a>. Maybe this could reduce
frustration for someone, reassuring them that they&amp;rsquo;re not alone - or even save
them some time.&lt;/p></description></item><item><title>Will AI Replace Developers?</title><link>https://bogomolov.work/blog/posts/will-ai-replace-developers/</link><pubDate>Wed, 12 Mar 2025 18:22:35 +0000</pubDate><guid>https://bogomolov.work/blog/posts/will-ai-replace-developers/</guid><description>&lt;p>A common narrative from &lt;a href="https://openai.com/" target="_blank" rel="noopener noreferrer external">OpenAI&lt;/a> and similar companies
(previous hype was from &lt;a href="https://www.nocode.tech/" target="_blank" rel="noopener noreferrer external">no-code-guys&lt;/a>) suggests that
the era of human developers is ending due to cost considerations, and that AI
will replace programmers soon.&lt;/p></description></item><item><title>Google Drive Backup Part 2</title><link>https://bogomolov.work/blog/posts/google-drive-backup-part2/</link><pubDate>Wed, 05 Mar 2025 08:46:19 +0000</pubDate><guid>https://bogomolov.work/blog/posts/google-drive-backup-part2/</guid><description>&lt;p>This is a continuation of the first
&lt;a href="https://bogomolov.work/blog/posts/google-drive-backup/">part&lt;/a>, where we built a basic
backup solution using local storage. Now, let&amp;rsquo;s elevate our approach by
integrating another cloud provider and adding robust encryption.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;source srcset="https://bogomolov.work/blog/posts/google-drive-backup-part2/suit-2_hu_82a204563a114b02.webp" type="image/webp">
&lt;source srcset="https://bogomolov.work/blog/posts/google-drive-backup-part2/suit-2_hu_44d838876900ac75.jpg" type="image/jpeg">
&lt;img src="https://bogomolov.work/blog/posts/google-drive-backup-part2/suit-2_hu_44d838876900ac75.jpg"
alt="generate image in anime style where relaxed professional guy in blue suit sitting relaxed with wiskey"
loading="lazy"
decoding="async">
&lt;/picture>
&lt;/figure>&lt;/p></description></item><item><title>(Almost) Free Google Drive Backup</title><link>https://bogomolov.work/blog/posts/google-drive-backup/</link><pubDate>Thu, 27 Feb 2025 20:12:31 +0000</pubDate><guid>https://bogomolov.work/blog/posts/google-drive-backup/</guid><description>&lt;p>Have you &lt;em>truly&lt;/em> considered the catastrophic risks of losing all your
&lt;a href="https://drive.google.com/" target="_blank" rel="noopener noreferrer external">Google Drive&lt;/a> data? Can your business afford such a
loss?&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;source srcset="https://bogomolov.work/blog/posts/google-drive-backup/suit_hu_668c52ea0836215c.webp" type="image/webp">
&lt;source srcset="https://bogomolov.work/blog/posts/google-drive-backup/suit_hu_dba093edecd4d84a.jpg" type="image/jpeg">
&lt;img src="https://bogomolov.work/blog/posts/google-drive-backup/suit_hu_dba093edecd4d84a.jpg"
alt="generate image in anime style where white collar in suit grabs his head because he realized that lost his reports"
loading="lazy"
decoding="async">
&lt;/picture>
&lt;/figure>&lt;/p></description></item><item><title>DI Container vs. Service Template (generator)</title><link>https://bogomolov.work/blog/posts/golang-di-container-vs-service-template/</link><pubDate>Fri, 21 Feb 2025 06:31:02 +0000</pubDate><guid>https://bogomolov.work/blog/posts/golang-di-container-vs-service-template/</guid><description>&lt;p>Let&amp;rsquo;s talk about building and evolving Golang services in the enterprise. We&amp;rsquo;ll
explore two approaches:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;source srcset="https://bogomolov.work/blog/posts/golang-di-container-vs-service-template/morpheus_hu_6571e7579093051a.webp" type="image/webp">
&lt;source srcset="https://bogomolov.work/blog/posts/golang-di-container-vs-service-template/morpheus_hu_cdbbd6fad91d63d9.jpg" type="image/jpeg">
&lt;img src="https://bogomolov.work/blog/posts/golang-di-container-vs-service-template/morpheus_hu_cdbbd6fad91d63d9.jpg"
alt="Create image illustration in anime style with Morpheus from Matrix suggesting you blue and red pills"
loading="lazy"
decoding="async">
&lt;/picture>
&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>A &lt;em>Service Template (generator)&lt;/em> is a common approach for unifying and quickly
bootstrapping new microservices. Its popularity is evident in the community,
as demonstrated by examples such as:
&lt;ul>
&lt;li>&lt;a href="https://github.com/evrone/go-clean-template" target="_blank" rel="noopener noreferrer external">https://github.com/evrone/go-clean-template&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.reddit.com/r/golang/comments/1h124ee/rate_my_go_project_template/" target="_blank" rel="noopener noreferrer external">https://www.reddit.com/r/golang/comments/1h124ee/rate_my_go_project_template/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/protium/github-template-for-golang-services-3o27" target="_blank" rel="noopener noreferrer external">https://dev.to/protium/github-template-for-golang-services-3o27&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=1ZbQS6pOlSQ" target="_blank" rel="noopener noreferrer external">https://www.youtube.com/watch?v=1ZbQS6pOlSQ&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Dependency_injection" target="_blank" rel="noopener noreferrer external">Dependency injection&lt;/a>
(&lt;em>DI&lt;/em>)&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> is an approach where objects are constructed by passing
pre-initialized components to them, rather than having the objects initialize
those components themselves.&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>
&lt;ul>
&lt;li>&lt;a href="https://github.com/irr123/di" target="_blank" rel="noopener noreferrer external">DI container&lt;/a> automates the dependency
injection process. While not the most common approach for bootstrapping new
services, it offers several advantages, which I will outline.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="the-problem">
&lt;a href="#the-problem">#&lt;/a> The problem&lt;/h2>
&lt;p>The challenge is a timeless one: accelerating the delivery of value to
production. From a technical perspective, this translates to several key
requirements:&lt;/p></description></item><item><title>Python3 Dockerfile with uv</title><link>https://bogomolov.work/blog/posts/docker-uv/</link><pubDate>Tue, 18 Feb 2025 12:39:42 +0000</pubDate><guid>https://bogomolov.work/blog/posts/docker-uv/</guid><description>&lt;p>I&amp;rsquo;ve been noticed that my simple
&lt;a href="https://hub.docker.com/repository/docker/c1rno/python" target="_blank" rel="noopener noreferrer external">python3 docker image&lt;/a>
with uv has unexpected amount of downloads, so, I descided to steal some traffic
from original &lt;a href="https://docs.astral.sh/uv/guides/integration/docker/" target="_blank" rel="noopener noreferrer external">https://docs.astral.sh/uv/guides/integration/docker/&lt;/a> to it page.&lt;/p>
&lt;h2 id="what-is-it-uv">
&lt;a href="#what-is-it-uv">#&lt;/a> What is it &lt;a href="https://github.com/astral-sh/uv" target="_blank" rel="noopener noreferrer external">uv&lt;/a>?&lt;/h2>
&lt;p>&lt;figure>
&lt;picture>
&lt;source srcset="https://bogomolov.work/blog/posts/docker-uv/posts-docker-uv-1_hu_3d193ab24457b365.webp" type="image/webp">
&lt;source srcset="https://bogomolov.work/blog/posts/docker-uv/posts-docker-uv-1_hu_6ca4995ff8bcfeb7.jpg" type="image/jpeg">
&lt;img src="https://bogomolov.work/blog/posts/docker-uv/posts-docker-uv-1_hu_6ca4995ff8bcfeb7.jpg"
alt="Create image illustration in anime style included python3‚Äôs snake, rust and uv (it‚Äôs new package manager for python written in rust)"
loading="lazy"
decoding="async">
&lt;/picture>
&lt;/figure>&lt;/p></description></item></channel></rss>